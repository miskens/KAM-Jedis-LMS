@using LexiconLMS.Models
@model LexiconLMS.Models.Activity

@{
    ViewBag.Title = "Create";

    ApplicationDbContext context = new ApplicationDbContext();
    
    string sender = string.Empty;
    if (Request.RequestContext.RouteData.Values["sender"] != null)
    {
        sender = Request.RequestContext.RouteData.Values["sender"].ToString();
    }
    int groupId = 0;
    if (Request.RequestContext.RouteData.Values["gId"] != null)
    {
        groupId = Int32.Parse(Request.RequestContext.RouteData.Values["gId"].ToString());
    } 
    int courseId = 0;
    
    if (Request.RequestContext.RouteData.Values["cId"] != null)
    {
        courseId = Int32.Parse(Request.RequestContext.RouteData.Values["cId"].ToString());
    }
    var course = context.Courses.FirstOrDefault(c => c.Id == courseId);
}

<h2>Skapa ny aktivitet</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">

            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                @if (Model != null)
                {
                    if (Model.EndDate < Model.StartDate)
                    {
                        @Html.ValidationMessage("EndDate", "Slutdatum får inte ligga före startdatum", new { @class = "text-danger" })
                    }
                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(courseName => course.Id, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(courseName => course.Name, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                @Html.ValidationMessageFor(model => model.CourseId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Spara" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Tillbaka", "Details", "Courses", new { id = courseId, sender, gId = groupId }, null)
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
