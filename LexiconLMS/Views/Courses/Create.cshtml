@model LexiconLMS.Models.Course
@using System.Configuration
@using LexiconLMS.Models

@{
    ViewBag.Title = "SkapaKurs";

    ApplicationDbContext context = new ApplicationDbContext();

    string sender = string.Empty;
    if (Request.RequestContext.RouteData.Values["sender"] != null)
    {
        sender = Request.RequestContext.RouteData.Values["sender"].ToString();
    }

    string groupId = "0";
    var group = new Group();
    if (Request.RequestContext.RouteData.Values["gId"] != null)
    {
        groupId = Request.RequestContext.RouteData.Values["gId"].ToString();
    }
    if (groupId != "undefined")
    { 
        int groupIdnum = Int32.Parse(groupId);
        group = context.Groups.FirstOrDefault(g => g.Id == groupIdnum);
}
}

<h2>Skapa ny kurs för grupp: @group.Name</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Course</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })  gruppens startdatum: @Html.Raw(group.StartDate.ToShortDateString())
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } }) gruppen slutdatum: @Html.Raw(group.EndDate.ToShortDateString())
                @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Skapa" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @if (sender == "g")
    {
        @Html.ActionLink("Tillbaka", "Details", "Group", new { id = groupId, sender }, null)
    }
    else
    {
        @Html.ActionLink("Tillbaka till listan", "Index")
    }

</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
