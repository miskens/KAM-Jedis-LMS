@using System.Data.Entity
@using LexiconLMS.Models
@model LexiconLMS.Models.Course

@{
    ViewBag.Title = "KursDetaljer";

    var context = new ApplicationDbContext();

    var activities = context.Activities.Where(a => a.CourseId == Model.Id);

    var documents = context.Documents.Where(d => d.CourseId == Model.Id);
    
    string sender = string.Empty;
    if (Request.RequestContext.RouteData.Values["sender"] != null)
    {
        sender = Request.RequestContext.RouteData.Values["sender"].ToString();
    }
    string groupId = "0";
    if (Request.RequestContext.RouteData.Values["gId"] != null)
    {
        groupId = Request.RequestContext.RouteData.Values["gId"].ToString();
    }
    ViewData["CourseId"] = Model.Id;
}
<h2>
    Kurs: @Model.Name
    @if (documents.Any())
    {
        <a href="@Url.Action("Index", "Documents", new { gId = Model.Id }, null)">
            <img src="@Url.Content("~/Content/Images/doc_icon.png")" style="width:25px; height:25px;" />
        </a>
    }
</h2>
<h4>( @Model.EndDate.ToShortDateString() - @Model.EndDate.ToShortDateString() )</h4>

<div>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
    </dl>
</div>
<br /><br />
<p>

    @* Lets create the link back ("tillbaka") *@
    @switch (sender)
    {
        case "" : // coming from courses index page
            {
                @Html.ActionLink("Tillbaka", "Index", "Courses")
                break;
            }

        case "s": // coming from the start page
        {
                @Html.ActionLink("Tillbaka", "Index", "Home")
                break;
        }
        case "g": // coming from the groups page
    {
        if (User.IsInRole("lärare"))
        {
            if (groupId != "0")
            {
                @Html.ActionLink("Tillbaka", "Details", "Group", new { id = groupId }, null)
            }
            else
            {         
                @Html.ActionLink("Tillbaka", "Details", "Group")
            }
                }
                else    // student
                {
                        @Html.ActionLink("Tillbaka", "Index", "Group")
                }

                break;
            }
        default: // we're unsure of where we came from so go to the start page and don't offer anything else
            {
                @Html.ActionLink("Startsida", "Index", "Home")
                break;
            }            
    }

   
    @*Lets create links for teachers that want to edit the course  or add a document *@
    @if (User.IsInRole("lärare"))
    {
        @Html.Raw(" | ")

        @Html.ActionLink("Ändra", "Edit", new {id=Model.Id, sender = sender}, null)
        
        @Html.Raw(" | ")
        
        @Html.ActionLink("Lägg till kursdokument", "Create", "Documents", new { sender = sender, gId = groupId, cId = Model.Id }, null)

        @*switch (sender)
        {
            case "": // coming originally from courses index page
                {
                    @Html.ActionLink("Ändra", "Edit", new {id = Model.Id, sender = sender})
                    break;
                }
                case "s": // coming from the start page
                {
                    @Html.ActionLink("Ändra", "Edit", new { id = Model.Id, sender, gId = groupId })
                    break;
                }
                case "g" : // coming from groups page
                {
                    @Html.ActionLink("Ändra", "Edit", new {id = Model.Id, sender, gId = groupId })
                    break;
        }
                default: //dunno where we came from, so lets go to start page after this...
        {
                    @Html.ActionLink("Ändra", "Edit", new { id=Model.Id, sender = sender, gId = groupId })
                    break;
        }
        }*@
    }


</p>
<br /><br />
<div>
    @Html.Partial("_CourseActivities", activities, ViewData)
</div>
