@model LexiconLMS.Models.Document
@using LexiconLMS.Models
@{
    ApplicationDbContext context = new ApplicationDbContext();
    ViewBag.Title = "Edit";
    string groupId = "0";
    if (Request.RequestContext.RouteData.Values["gId"] != null)
    {
        groupId = Request.RequestContext.RouteData.Values["gId"].ToString();
    }

    string courseId = "0";
    if (Request.RequestContext.RouteData.Values["cId"] != null)
    {
        courseId = Request.RequestContext.RouteData.Values["cId"].ToString();
    }

    string activityId = "0";
    if (Request.RequestContext.RouteData.Values["aId"] != null)
    {
        activityId = Request.RequestContext.RouteData.Values["aId"].ToString();
    }
    
    var userName = context.Users.Find(Model.UserId).FullName;
    
}

<h2>Ändra informationen för dokumentet "@Model.OriginalFileName"</h2>
<h4>Skapad av @userName @Model.UploadTime.ToShortDateString()</h4>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @Html.HiddenFor(model => model.Uri)

        @Html.HiddenFor(model => model.OriginalFileName)

        @Html.HiddenFor(model => model.UploadTime)

        @Html.HiddenFor(model => model.UserId)
        
        @Html.HiddenFor(model => model.GroupId)
        
        @Html.HiddenFor(model => model.CourseId)
        
        @Html.HiddenFor(model => model.ActivityId)        

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @if (Model.ActivityId.HasValue)
    {
        @Html.ActionLink("Tillbaka", "Index", "Documents", new { gId = groupId, cId = courseId, aId = activityId }, null)
    }
    @if (Model.CourseId.HasValue)
    {
        @Html.ActionLink("Tillbaka", "Index", "Documents", new { gId = groupId, cId = courseId }, null)
    }
    @if (Model.GroupId.HasValue)
    {
        @Html.ActionLink("Tillbaka", "Index", "Documents", new { gId = groupId }, null)
    }
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
