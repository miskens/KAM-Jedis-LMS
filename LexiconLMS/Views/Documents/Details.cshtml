@using LexiconLMS.Models
@using Microsoft.AspNet.Identity
@model LexiconLMS.Models.Document

@{
    ApplicationDbContext context = new ApplicationDbContext();

    ViewBag.Title = "Details";

    var documentName = "";

    string groupId = "0";
    if (Request.RequestContext.RouteData.Values["gId"] != null)
    {
        groupId = Request.RequestContext.RouteData.Values["gId"].ToString();
        var groupIdnum = Int32.Parse(groupId);
        Group group = context.Groups.Find(groupIdnum);
        documentName = group.Name;
    }

    string courseId = "0";
    if (Request.RequestContext.RouteData.Values["cId"] != null)
    {
        courseId = Request.RequestContext.RouteData.Values["cId"].ToString();
        var courseIdnum = Int32.Parse(courseId);
        Course course = context.Courses.Find(courseIdnum);
        documentName = course.Name;
    }

    string activityId = "0";
    if (Request.RequestContext.RouteData.Values["aId"] != null)
    {
        activityId = Request.RequestContext.RouteData.Values["aId"].ToString();
        var activityIdnum = Int32.Parse(activityId);
        Activity activity = context.Activities.Find(activityIdnum);
        documentName = activity.Name;
    }

    var user = context.Users.Find(Model.UserId);
}

<div>
    <h2>Dokument för @documentName</h2>
    <hr />
    <dl class="dl-horizontal">
        <dt>
            @Html.ActionLink(Model.OriginalFileName, "GetFileFromServer", "Documents", new { fileUri = Model.Uri, originalFileName = Model.OriginalFileName })
        </dt>
        <dd>
            @Html.DisplayFor(model => model.OriginalFileName)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Uri)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Uri)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.UploadTime)
        </dt>
        <dd>
            @Html.DisplayFor(model => model.UploadTime)
        </dd>
        <dt>
            @Html.DisplayNameFor(model => model.UserId)
        </dt>
        <dd>
            @Html.Raw(user.FullName)
        </dd>

    </dl>
</div>
<p>
    @if (Model.ActivityId.HasValue)
    {
        if (User.IsInRole("lärare") || (User.IsInRole("elev") && Model.UserId == User.Identity.GetUserId()))
        {
            @Html.ActionLink("Ändra", "Edit", "Documents", new { id = Model.Id, gId = groupId, cId = courseId, aId = activityId }, null)
        }
        @Html.ActionLink("Tillbaka", "Index", "Documents", new { gId = groupId, cId = courseId, aId = activityId }, null)
    }
    @if (Model.CourseId.HasValue)
    {
        if (User.IsInRole("lärare") || (User.IsInRole("elev") && Model.UserId == User.Identity.GetUserId()))
        {
            @Html.ActionLink("Ändra", "Edit", "Documents", new { id = Model.Id, gId = groupId, cId = courseId }, null)
        }
        @Html.ActionLink("Tillbaka", "Index", "Documents", new { gId = groupId, cId = courseId }, null)
    }
    @if (Model.GroupId.HasValue)
    {
        if (User.IsInRole("lärare") || (User.IsInRole("elev") && Model.UserId == User.Identity.GetUserId()))
        {
            @Html.ActionLink("Ändra", "Edit", "Documents", new { id = Model.Id, gId = groupId }, null)
        }
        @Html.ActionLink("Tillbaka", "Index", "Documents", new { gId = groupId }, null)
    }

</p>
