@using LexiconLMS.Models
@model IEnumerable<LexiconLMS.Models.Document>

@{
    ViewBag.Title = "Index";

    var groupId = ViewData["groupId"];
    var courseId = ViewData["courseId"];
    var activityId = ViewData["activityId"];

    if (groupId == null || groupId == "0")
    {
        if (Request.RequestContext.RouteData.Values["gId"] != null)
        {
            groupId = Request.RequestContext.RouteData.Values["gId"].ToString();
        } 
    }
    if (courseId == null || courseId == "0")
    {
        if (Request.RequestContext.RouteData.Values["cId"] != null)
        {
            courseId = Request.RequestContext.RouteData.Values["cId"].ToString();
        }
    }
    if (activityId == null || activityId == "0")
    {
        if (Request.RequestContext.RouteData.Values["aId"] != null)
        {
            activityId = Request.RequestContext.RouteData.Values["aId"].ToString();
        }
    }

    ApplicationDbContext context = new ApplicationDbContext();
}

<h2>Dokumentlista</h2>

<p>
    @Html.ActionLink("Ladda upp ett nytt dokument", "Create")
</p>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.OriginalFileName)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadTime)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.GroupId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CourseId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UserId)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ActivityId)
        </th>
        <th></th>
    </tr>

@foreach (var item in Model) {
    var groupName = string.Empty;
    if (item.GroupId.HasValue)
    {
        groupName = context.Groups.Find(item.GroupId).Name;
    }
    var courseName = string.Empty;
    if (item.CourseId.HasValue)
    {
        courseName = context.Courses.Find(item.CourseId).Name;
    }
    var activityName = string.Empty;
    if (item.ActivityId.HasValue)
    {
        activityName = context.Activities.Find(item.ActivityId).Name;
    }
    var userName = context.Users.Find(item.UserId).FullName;
    <tr>
        <td>
            @Html.ActionLink(item.OriginalFileName, "GetFileFromServer", "Documents", new { fileUri = item.Uri, originalFileName = item.OriginalFileName })
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Name)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Description)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UploadTime)
        </td>
        <td>
            @groupName
        </td>
        <td>
            @courseName
        </td>
        <td>
            @userName
        </td>
        <td>
            @activityName
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { id=item.Id }) |
            @Html.ActionLink("Details", "Details", new { id=item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id=item.Id })
        </td>
    </tr>
}

</table>
