@model LexiconLMS.Models.Document
@using LexiconLMS.Models

@{
    ApplicationDbContext context = new ApplicationDbContext();
    
    ViewBag.Title = "Delete";

    string groupId = "0";
    if (Request.RequestContext.RouteData.Values["gId"] != null)
    {
        groupId = Request.RequestContext.RouteData.Values["gId"].ToString();
    }

    string courseId = "0";
    if (Request.RequestContext.RouteData.Values["cId"] != null)
    {
        courseId = Request.RequestContext.RouteData.Values["cId"].ToString();
    }

    string activityId = "0";
    if (Request.RequestContext.RouteData.Values["aId"] != null)
    {
        activityId = Request.RequestContext.RouteData.Values["aId"].ToString();
    }

    var userName = context.Users.Find(Model.UserId).FullName;

    var groupName = string.Empty;
    if (groupId != "0")
    {
        groupName = context.Groups.Find(Int32.Parse(groupId)).Name;
    }
    
    var courseName = string.Empty;
    if (courseId != "0")
    {
        courseName = context.Courses.Find(Int32.Parse(courseId)).Name;
    }
    
    var activityName = string.Empty;
    if (activityId != "0")
    {
        activityName = context.Activities.Find(Int32.Parse(activityId)).Name;
    } 
    
}

<h2>Ta bort</h2>

<h3>Är du säker på att du vill ta bort filen permanent?</h3>
<h4>Filen skapades av @userName, @Model.UploadTime.ToShortDateString()</h4>
@*<h5>
@if (activityId != "0")
{
     @Html.Raw("Tillhörande aktiviteten " + @activityName)
}
@if (courseId != "0")
{
    @Html.Raw("Tillhörande kursen " + @courseName)
}
@if (groupId != "0")
{
    @Html.Raw("Tillhörande gruppen " + @groupName)
}
</h5>*@
<div>
    <hr />
    <dl class="dl-horizontal">

        @Html.HiddenFor(model=>model.Id)
        @Html.HiddenFor(model=>model.Uri)
        @Html.HiddenFor(model=>model.UserId)
        @Html.HiddenFor(model=>model.GroupId)
        @Html.HiddenFor(model=>model.CourseId)
        @Html.HiddenFor(model=>model.ActivityId)
        @Html.HiddenFor(model=>model.UploadTime)

        <dt>
            @Html.DisplayNameFor(model => model.OriginalFileName)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.OriginalFileName)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Name)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Name)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.Description)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.Description)
        </dd>

        @*<dt>
            @Html.DisplayNameFor(model => model.UploadTime)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UploadTime)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.GroupId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.GroupId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.CourseId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.CourseId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.UserId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.UserId)
        </dd>

        <dt>
            @Html.DisplayNameFor(model => model.ActivityId)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.ActivityId)
        </dd>*@

    </dl>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Delete" class="btn btn-default" /> |
            @Html.ActionLink("Tillbaka", "Index", "Documents", new { gId = groupId, cId = courseId, aId = activityId }, null)
        </div>
    }
</div>
