@using LexiconLMS.Models
@using Microsoft.AspNet.Identity
@model IEnumerable<LexiconLMS.Models.Document>

@{
    ApplicationDbContext context = new ApplicationDbContext();

    ViewBag.Title = "ListActivityDocuments";

    var activityId = ViewData["activityId"].ToString();
    Activity activity = new Activity();
    if (activityId != null && activityId != "0")
    {
        var aId = Int32.Parse(activityId);
        activity = context.Activities.Find(aId);
        ViewData["aId"] = activity.Id;
    }
    var courseId = ViewData["courseId"].ToString();
    Course course = new Course();
    if (courseId != null && activityId != "0")
    {
        var cId = Int32.Parse(courseId);
        course = context.Courses.Find(cId);
        ViewData["cId"] = course.Id;
    }
    var groupId = course.GroupId;
    Group group = new Group();
    if (group.Id != null && activityId != "0")
    {
        group = context.Groups.Find(groupId);
        ViewData["gId"] = group.Id;
    }
    //var lateUser = new ApplicationUser();
    var lateAssignments = context.Users.Where(u => u.GroupId == groupId).ToList();
    ApplicationUser user = new ApplicationUser();

    var assignmentSent = false;
    foreach (var doc in Model)
    {
        lateAssignments.Remove(context.Users.Find(doc.UserId));
    }
}

<h2>Document för @activity.Name</h2>

<p>
    @Html.ActionLink("Tillbaka", "Details", "Courses", new { id = course.Id, sender = "g", gId = groupId }, null)
</p>
<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.Name)
        </th>
        <th></th> @* kolumn utan text för downloadknapp *@
        <th>
            @Html.Raw("Typ av aktivitet")
        </th>
        <th>
            @Html.DisplayNameFor(model => model.Description)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.UploadTime)
        </th>
        <th>
            @Html.Raw("Dokumentets ägare")
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        if (item != null)
        {
            var desc = string.Empty;
            if (item.Description.Length > 50)
            {
                desc = item.Description.Substring(0, 50) + "...";
            }
            else
            {
                desc = item.Description;
            }
            <tr>
                <td>
                    @Html.ActionLink((string)item.Name, "Details", "Documents", new { id = item.Id, gId = groupId, cId = courseId, aId = activityId }, null)
                </td>
                <td>
                    <a href="@Url.Action("GetFileFromServer", "Documents", new {fileUri = item.Uri, originalFileName = item.OriginalFileName, userId = item.UserId }, null)">
                        <img src="@Url.Content("~/Content/Images/download.png")" style="width: 25px; height: 25px;" />
                    </a>
                </td>
                <td>@Html.Raw(activity.Type)</td>
                <td>
                    @Html.Raw(desc)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.UploadTime)
                </td>
                <td>
                    @{ var docuser = context.Users.Find(item.UserId); }
                    @Html.DisplayFor(modelItem => docuser.FullName)
                </td>
                @if (User.IsInRole("lärare") || (User.IsInRole("elev") && item.UserId == User.Identity.GetUserId()))
                {
                    <td>
                        <a href="@Url.Action("Delete", "Documents", new {id = item.Id, gId = group.Id, cId = courseId, aId = activityId }, null)">
                            <img src="@Url.Content("~/Content/Images/delete.png")" style="width: 15px; height: 15px;" />
                        </a>
                    </td>
                }
            </tr>
        }
    }
    @foreach (var doc in Model)
    {
        if (assignmentSent)
        {
            break;
        }
            if (doc.UserId == User.Identity.GetUserId())
            {
                assignmentSent = true;
            }
    }

    @if ((activityId != null && activityId != "0" && User.IsInRole("elev") && activity.Type.ToLower() == "inlämningsuppgift" && !assignmentSent) || User.IsInRole("lärare"))
    {
        <tr>
            <td>
                <a href="@Url.Action("Create", "Documents", new { sender = "g", gId = group.Id, cId = courseId, aId = activityId }, null)">
                    <img src="@Url.Content("~/Content/Images/create.png")" style="width:25px; height:25px;" />
                </a>
            </td>
        </tr>
    }
    else if (activity.Type.ToLower() == "inlämningsuppgift")
    {
        <tr>
            <td>
                <h4 style="color:green">Du har redan skickat in uppgiften, Gratulerar!</h4>
            </td>
        </tr>
    }
</table>

@if (User.IsInRole("lärare") && activity.Type.ToLower() == "inlämningsuppgift")
{
    <h2>Inlämningsuppgift saknas från följande studenter:</h2>

    <table class="lateUsersTable">
        <tr>
            <th>
                @Html.Raw("Namn")
            </th>
        </tr>

        @foreach (var lateuser in lateAssignments)
        {
            if (user != null)
            {
                <tr>
                    <td>
                        @Html.ActionLink(lateuser.FullName, "Details", "Users", new { id = lateuser.Id, gId = groupId, cId = courseId, aId = activityId }, null)
                    </td>
                </tr>
            }
        }
    </table>
}